{"version":3,"sources":["components/Home.js","apis/CinemaAxios.js","services/auth.js","components/authorization/Login.js","routeconf.js","components/movies/SelectGenres.js","components/movies/AddMovie.js","components/movies/EditMovie.js","components/movies/Movies.js","components/projections/Projections.js","components/projections/AddProjection.js","components/NotFound.js","index.js"],"names":["Home","React","Component","CinemaAxios","axios","create","baseURL","interceptors","request","use","config","jwt","window","localStorage","headers","login","username","password","a","cred","post","ret","jwt_decoded","jwt_decode","data","setItem","role","authority","location","reload","alert","console","log","Login","props","state","event","name","target","value","change","this","setState","Row","className","Col","md","Form","Group","Label","Control","type","onChange","e","onInputChange","Button","onClick","withParams","params","useParams","withNavigation","navigate","useNavigate","SelectGenres","genres","selectedGenres","isInSelectedGenres","bind","selectionOccured","getGenres","get","result","genre","some","alreadySelected","naziv","previouslySelectedGenres","ctrlKey","push","Modal","show","onHide","handleClose","backdrop","Header","closeButton","Title","Body","style","marginBottom","variant","finishSelection","Table","map","g","backgroundColor","color","id","onNameChange","onDurationChange","duration","showSelectGenres","handleGenreSelection","trajanje","zanrovi","then","res","catch","error","element","join","xs","sm","htmlFor","InputGroup","summarizedGenres","disabled","marginTop","newlySelectedGenres","movieName","movieDuration","movieId","getMovieById","put","edit","movies","checked","search","minDuration","maxDuration","getMovies","getAllGenres","trajanjeOd","trajanjeDo","zanrId","response","err","list","forEach","index","splice","delete","deleteFromState","movie","getGenresStringFromList","goToEdit","width","as","Select","Check","hidden","renderSearchForm","goToAdd","renderMovies","Projections","projections","pageNo","totalPages","getProjections","newPageNo","conf","projection","film","datumIVreme","tip","sala","cenaKarte","AddProjection","time","hall","price","isValid","typeRegex","RegExp","timeRegex","test","preventDefault","projectionDTO","input","isInputValid","find","pattern","valueInputChanged","required","step","movieSelectionChanged","NotFound","App","Navbar","expand","bg","Brand","Link","to","Nav","removeItem","Container","paddingTop","path","replace","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e5baa4d3.chunk.js","sourcesContent":["import React from 'react'\n\nclass Home extends React.Component {\n  render() {\n    return <h1>Home</h1>\n  }\n}\n\nexport default Home;","import axios from 'axios';\n\nvar CinemaAxios = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  /* other custom settings */\n});\n\nCinemaAxios.interceptors.request.use(\n  function presretac(config){\n    const jwt = window.localStorage['jwt']\n    if(jwt){\n      config.headers['Authorization']=\"Bearer \" + jwt\n    }\n    return config;\n  }\n);\nexport default CinemaAxios;\n","import CinemaAxios from '../apis/CinemaAxios'\nimport jwt_decode from \"jwt-decode\"\n\nexport const login = async function(username, password){\n    const cred = {\n        username: username,\n        password: password\n    }\n\n    try{\n        const ret = await CinemaAxios.post('korisnici/auth',cred);\n        const jwt_decoded = jwt_decode(ret.data);\n        window.localStorage.setItem('jwt',ret.data);\n        window.localStorage.setItem('role',jwt_decoded.role.authority);\n        window.location.reload();\n    }catch(err){\n        alert(\"Neuspesan login\");\n        console.log(err);\n    }\n}\n\nexport const logout = function(){\n    window.localStorage.removeItem('jwt');\n    window.localStorage.removeItem('role');\n    window.location.reload();\n}\n","import {Row, Col, Form, Button} from 'react-bootstrap'\nimport React from 'react'\nimport {login} from '../../services/auth'\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            username : \"\",\n            password : \"\"\n        }\n    }\n\n    onInputChange(event){\n        const name = event.target.name;\n        const value = event.target.value\n\n        let change = {}\n        change[name] = value;\n\n        this.setState(change)\n    }\n    render(){\n        return(\n            <Row className=\"justify-content-center\">\n                <Col md={6}>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={(e)=>this.onInputChange(e)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" onChange={(e)=>this.onInputChange(e)}></Form.Control>\n                    </Form.Group>\n                </Form>\n                <Button onClick={()=>login(this.state.username, this.state.password)}>Log in</Button>\n                </Col>\n            </Row>\n        )\n        \n    }\n}\n\nexport default Login","import { useNavigate, useParams } from 'react-router-dom';\n\nexport function withParams(Component) {\n    return props => <Component {...props} params={useParams()} />;\n};\n\nexport function withNavigation(Component) {\n    return props => <Component {...props} navigate={useNavigate()} />;\n}","import React from \"react\";\nimport { Modal, Button, Table } from \"react-bootstrap\";\nimport CinemaAxios from \"../../apis/CinemaAxios\";\nimport {withParams, withNavigation} from '../../routeconf'\n\nclass SelectGenres extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { genres: [], selectedGenres: this.props.selectedGenres };\n\n    this.isInSelectedGenres = this.isInSelectedGenres.bind(this);\n    this.selectionOccured = this.selectionOccured.bind(this);\n  }\n\n  componentDidMount(){\n    this.getGenres();\n  }\n\n  async getGenres() {\n    try {\n      let result = await CinemaAxios.get(\"/zanrovi\");\n      this.setState({ genres: result.data });\n    } catch (error) {\n      alert(\"Could not fetch genres.\");\n      console.log(error);\n    }\n  }\n\n  isInSelectedGenres(genre){\n    return this.state.selectedGenres.some((alreadySelected => alreadySelected.naziv == genre.naziv));\n  }\n\n  selectionOccured(event, genre){\n    \n    let previouslySelectedGenres = this.state.selectedGenres;\n\n    if(event.ctrlKey){\n      if(!this.isInSelectedGenres(genre)){\n        previouslySelectedGenres.push(genre);\n        this.setState({selectedGenres: previouslySelectedGenres});\n      }\n    }\n    else{\n      this.setState({selectedGenres: [genre]});\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          onHide={this.props.handleClose}\n          backdrop=\"static\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Select genres</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div style={{ marginBottom: \"5px\" }}>\n              <Button variant=\"info\" onClick={() => this.props.finishSelection(this.state.selectedGenres)}>Select</Button>\n            </div>\n\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.genres.map((g) => {\n                  return (\n                    <tr \n                      style={ this.isInSelectedGenres(g) ? { backgroundColor: \"#23abed\", color: \"white\" } : {}}\n                      onClick={(event)=>this.selectionOccured(event, g)}\n                      key={g.id}>\n                      <td>{g.naziv}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default withNavigation(withParams(SelectGenres));\n","import React from \"react\";\nimport { Form, Button, Row, Col, InputGroup } from \"react-bootstrap\";\nimport CinemaAxios from \"./../../apis/CinemaAxios\";\nimport SelectGenres from \"./SelectGenres\";\nimport { withNavigation } from \"../../routeconf\";\n\nclass AddMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      duration: 0,\n      showSelectGenres: false,\n      selectedGenres: [],\n    };\n    this.create = this.create.bind(this);\n    this.handleGenreSelection = this.handleGenreSelection.bind(this);\n  }\n\n  handleGenreSelection(selectedGenres) {\n    this.setState({ selectedGenres: selectedGenres });\n  }\n\n  create() {\n    var params = {\n      naziv: this.state.name,\n      trajanje: this.state.duration,\n      zanrovi: this.state.selectedGenres\n    };\n\n    CinemaAxios.post(\"/filmovi\", params)\n      .then((res) => {\n        // handle success\n        console.log(res);\n\n        alert(\"Movie was added successfully!\");\n        this.props.navigate(\"/movies\");\n      })\n      .catch((error) => {\n        // handle error\n        console.log(error);\n        alert(\"Error occured please try again!\");\n      });\n  }\n\n  onNameChange = (event) => {\n    console.log(event.target.value);\n\n    const { name, value } = event.target;\n    console.log(name + \", \" + value);\n\n    this.setState((state, props) => ({\n      name: value,\n    }));\n  };\n\n  onDurationChange = (event) => {\n    console.log(event.target.value);\n\n    const { name, value } = event.target;\n    console.log(name + \", \" + value);\n\n    this.setState((state, props) => ({\n      duration: value,\n    }));\n  };\n\n  summarizedGenres(){\n    return this.state.selectedGenres.map(element => element.naziv).join(',');\n  }\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col></Col>\n          <Col xs=\"12\" sm=\"10\" md=\"8\">\n            <h1>Add new movie</h1>\n            <Form>\n              <Form.Label htmlFor=\"name\">Name</Form.Label>\n              <Form.Control\n                id=\"name\"\n                type=\"text\"\n                onChange={(e) => this.onNameChange(e)}\n              />\n              <Form.Label htmlFor=\"duration\">Duration</Form.Label>\n              <Form.Control\n                id=\"duration\"\n                type=\"number\"\n                onChange={(e) => this.onDurationChange(e)}\n              />\n\n              <Form.Label>Genres</Form.Label>\n              <InputGroup>\n                <Form.Control value={this.summarizedGenres()} disabled />\n                <Button\n                    variant=\"info\"\n                    onClick={() => this.setState({ showSelectGenres: true })}\n                >\n                  &gt;\n                </Button>\n              </InputGroup>\n\n              <Button style={{ marginTop: \"25px\" }} onClick={this.create}>\n                Add\n              </Button>\n            </Form>\n          </Col>\n          <Col></Col>\n        </Row>\n\n        <SelectGenres\n          show={this.state.showSelectGenres}\n          handleClose={() => this.setState({ showSelectGenres: false })}\n          selectedGenres={this.state.selectedGenres}\n          finishSelection={(newlySelectedGenres) =>\n            this.setState({\n              selectedGenres: newlySelectedGenres,\n              showSelectGenres: false,\n            })\n          }\n        />\n      </>\n    );\n  }\n}\n\nexport default withNavigation(AddMovie);\n","import React from 'react';\nimport CinemaAxios from './../../apis/CinemaAxios';\nimport {Col, Row, Form, Button} from 'react-bootstrap';\nimport {withParams, withNavigation} from '../../routeconf';\n\nclass EditMovie extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { movieId: -1, movieName: '', movieDuration: 0 }\n    }\n\n    componentDidMount() {\n       this.getMovieById(this.props.params.id);\n    }\n\n    getMovieById(movieId) {\n        CinemaAxios.get('/filmovi/' + movieId)\n        .then(res => {\n            // handle success\n            console.log(res);\n            this.setState({movieId: res.data.id, movieName: res.data.naziv, movieDuration: res.data.trajanje});\n        })\n        .catch(error => {\n            // handle error\n            console.log(error);\n            alert('Error occured please try again!');\n         });\n    }\n\n    onNameChange = event => {\n        console.log(event.target.value);\n\n        const { name, value } = event.target;\n        console.log(name + \", \" + value);\n\n        this.setState((state, props) => ({\n            movieName: value\n        }));\n    }\n\n    onDurationChange = event => {\n        console.log(event.target.value);\n\n        const { name, value } = event.target;\n        console.log(name + \", \" + value);\n\n        this.setState((state, props) => ({\n            movieDuration: value\n        }));\n    }\n\n    edit() {\n        var params = {\n            'id': this.state.movieId,\n            'naziv': this.state.movieName,\n            'trajanje': this.state.movieDuration\n        };\n\n        CinemaAxios.put('/filmovi/' + this.state.movieId, params)\n        .then(res => {\n            // handle success\n            console.log(res);\n            alert('Movie was edited successfully!');\n            this.props.navigate('/movies');\n        })\n        .catch(error => {\n            // handle error\n            console.log(error);\n            alert('Error occured please try again!');\n         });\n    }\n\n    render() {\n        return (\n            <Col>\n                <Row><h1>Edit movie</h1></Row>\n                <Row>\n                <Form>\n                    <Form.Group>\n                    <Form.Label htmlFor=\"name\">Name</Form.Label>\n                    <Form.Control id=\"name\" type=\"text\" value={this.state.movieName} onChange={(e) => this.onNameChange(e)}/><br/>\n                    </Form.Group>\n                    <Form.Group>\n                    <Form.Label htmlFor=\"duration\">Duration</Form.Label>\n                    <Form.Control id=\"duration\" type=\"number\" value={this.state.movieDuration} onChange={(e) => this.onDurationChange(e)}/>\n                    </Form.Group>\n                </Form>\n                </Row>\n                <Button className=\"button button-navy\" onClick={() => this.edit()}>Edit</Button>\n            </Col>\n        );\n    }\n}\n\nexport default withNavigation(withParams(EditMovie));","import React from 'react';\nimport CinemaAxios from './../../apis/CinemaAxios';\nimport { Row, Col, Button, Table, Form } from 'react-bootstrap'\nimport './../../index.css';\nimport { withParams, withNavigation } from '../../routeconf'\n\nclass Movies extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const search = {\n            name: \"\",\n            minDuration: \"\",\n            maxDuration: \"\",\n            id: \"\"\n        }\n        this.state = {\n            movies: [],\n            genres: [],\n            checked: false,\n            search: search\n        }\n    }\n\n    componentDidMount() {\n        this.getMovies();\n        this.getAllGenres();\n    }\n\n    getMovies() {\n        let config = {\n            params: {\n                naziv: this.state.search.name,\n                trajanjeOd: this.state.search.minDuration,\n                trajanjeDo: this.state.search.maxDuration,\n                zanrId: this.state.search.id,\n            }\n        }\n\n        /*if (this.state.search.name != \"\") {\n            config.params['naziv'] = this.state.search.name;\n        }\n        if (this.state.search.minDuration != \"\") {\n            config.params['trajanjeOd'] = this.state.search.minDuration;\n        }\n        if (this.state.search.maxDuration != \"\") {\n            config.params['trajanjeDo'] = this.state.search.maxDuration;\n        }*/\n        CinemaAxios.get('/filmovi', config)\n            .then(res => {\n                // handle success\n                console.log(res);\n                this.setState({\n                    movies: res.data,\n                });\n            })\n            .catch(error => {\n                // handle error\n                console.log(error);\n                alert('Error occured please try again!');\n            });\n    }\n\n    getAllGenres(){\n        CinemaAxios.get(\"/zanrovi\")\n        .then((response)=>{\n            this.setState({genres:response.data});\n        })\n        .catch((err=>{console.log(err)}));\n    }\n\n    getGenresStringFromList(list) {\n        return list.map(element => element.naziv).join(',');\n    }\n\n\n    deleteFromState(movieId) {\n        var movies = this.state.movies;\n        movies.forEach((element, index) => {\n            if (element.id === movieId) {\n                movies.splice(index, 1);\n                this.setState({ movies: movies });\n            }\n        });\n    }\n\n    delete(movieId) {\n        CinemaAxios.delete('/filmovi/' + movieId)\n            .then(res => {\n                // handle success\n                console.log(res);\n                alert('Movie was deleted successfully!');\n                this.deleteFromState(movieId); // ili refresh page-a window.location.reload();\n            })\n            .catch(error => {\n                // handle error\n                console.log(error);\n                alert('Error occured please try again!');\n            });\n    }\n\n    onInputChange(event) {\n        const name = event.target.name;\n        const value = event.target.value\n\n        let search = this.state.search;\n        search[name] = value;\n\n        this.setState({ search })\n    }\n\n    goToAdd() {\n        this.props.navigate('/movies/add');\n    }\n\n    goToEdit(movieId) {\n        this.props.navigate('/movies/edit/' + movieId);\n    }\n\n    renderMovies() {\n        return this.state.movies.map((movie) => {\n            return (\n                <tr key={movie.id}>\n                    <td>{movie.naziv}</td>\n                    <td>{movie.trajanje}</td>\n                    <td>{this.getGenresStringFromList(movie.zanrovi)}</td>\n                    {window.localStorage['role'] == 'ROLE_ADMIN' ?\n                        [<td><Button variant=\"warning\" onClick={() => this.goToEdit(movie.id)}>Edit</Button></td>,\n                        <td><Button variant=\"danger\" onClick={() => this.delete(movie.id)}>Delete</Button></td>]\n                        : null}\n                </tr>\n            )\n        })\n    }\n\n    renderSearchForm() {\n        return (\n            <>\n            <Form style={{ width: \"100%\" }}>\n                <Row><Col>\n                    <Form.Group>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            as=\"input\"\n                            type=\"text\"\n                            onChange={(e) => this.onInputChange(e)}></Form.Control>\n                    </Form.Group>\n                </Col></Row>\n\n                <Row>\n                    <Col>\n                        <Form.Group>\n                            <Form.Label>Min Duration</Form.Label>\n                            <Form.Control\n                                name=\"minDuration\"\n                                as=\"input\"\n                                type=\"number\"\n                                onChange={(e) => this.onInputChange(e)}></Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group>\n                            <Form.Label>Max Duration</Form.Label>\n                            <Form.Control\n                                name=\"maxDuration\"\n                                as=\"input\"\n                                type=\"number\"\n                                onChange={(e) => this.onInputChange(e)}></Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row><Col>\n                    <Form.Group>\n                        <Form.Label>Genre</Form.Label>\n                        <Form.Select name=\"id\" onChange={(e)=>this.onInputChange(e)}>\n                            <option value=\"\"></option>\n                            {this.state.genres.map((genre)=>{\n                                return(\n                                    <option value={genre.id}>{genre.naziv}</option>\n                                );\n                            })}\n                        </Form.Select>\n                    </Form.Group>\n                </Col></Row>\n            </Form>\n            <Row><Col>\n                <Button className=\"mt-3\" onClick={() => this.getMovies()}>Search</Button>\n            </Col></Row>\n            </>\n        );\n    }\n    render() {\n        return (\n            <Col>\n                <Row><h1>Movies</h1></Row>\n                <Row><Form.Check onChange={()=>this.setState({checked:!this.state.checked})}></Form.Check></Row>\n                <Row hidden={!this.state.checked}>\n                    {this.renderSearchForm()}\n                </Row>\n                <br/>\n\n                {window.localStorage['role']=='ROLE_ADMIN'?\n                <Row><Col>\n                <Button onClick={() => this.goToAdd() }>Add</Button>\n                </Col></Row>: null}\n\n                <Row><Col>\n                <Table style={{marginTop: 5}}>\n                <thead>\n                <tr>\n                <th>Name</th>\n                <th>Duration (min)</th>\n                <th>Genres</th>\n                <th></th>\n                </tr>\n                </thead>\n                <tbody>\n                    {this.renderMovies()}\n                </tbody>\n                </Table>\n                </Col></Row>\n            </Col>\n        );\n    }\n}\n\nexport default withNavigation(withParams(Movies));","import React from \"react\";\nimport {Button, Table} from 'react-bootstrap';\nimport CinemaAxios from \"../../apis/CinemaAxios\";\nimport {withNavigation} from '../../routeconf';\n\nclass Projections extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { projections: [], movies: []};\n    this.pageNo = 0;\n    this.totalPages = 0;\n  }\n\n  componentDidMount() {\n    this.getProjections(0);\n  }\n\n  async getProjections(newPageNo) {    \n    const conf = {\n      params : {\n        pageNo: newPageNo\n      }\n    }\n    try {\n      let result = await CinemaAxios.get(\"/projekcije\", conf);\n      this.pageNo=newPageNo;\n      this.totalPages = result.headers['total-pages'];\n      this.setState({\n         projections: result.data\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  goToAdd() {\n    this.props.navigate(\"/projections/add\");\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Projections</h1>\n\n        <div>\n          <Button onClick={() => this.goToAdd()}>\n            Add\n          </Button>\n          <br />\n\n          <br/>\n          <br/>\n\n          <Table id=\"movies-table\">\n            <thead>\n              <tr>\n                <th>Movie Name</th>\n                <th>Time</th>\n                <th>Projection Type</th>\n                <th>Hall</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.projections.map((projection) => {\n                return (\n                  <tr key={projection.id}>\n                    <td>{projection.film.naziv}</td>\n                    <td>{projection.datumIVreme}</td>\n                    <td>{projection.tip}</td>\n                    <td>{projection.sala}</td>\n                    <td>{projection.cenaKarte}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n          <Button disabled={this.pageNo===0} \n                  onClick={()=>this.getProjections(this.pageNo-1)}\n                  className=\"mr-3\">Prev</Button>\n          <Button disabled={this.pageNo==this.totalPages-1} onClick={()=>this.getProjections(this.pageNo+1)}>Next</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withNavigation(Projections);\n","import React from 'react';\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport CinemaAxios from '../../apis/CinemaAxios';\nimport { withNavigation } from '../../routeconf';\n\nclass AddProjection extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let projection = {\n            time: \"\",\n            type: \"\",\n            hall: 0,\n            price: 0.00,\n            movie: null\n        }\n\n        this.state = { projection: projection, movies: [], isValid: false  };\n    }\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    async getMovies() {\n        try {\n            let result = await CinemaAxios.get(\"/filmovi\");\n            let movies = result.data;\n            this.setState({ movies: movies });\n            console.log(\"test1\");\n        } catch (error) {\n            console.log(error);\n            alert(\"Couldn't fetch movies\");\n        }\n    }\n\n    isInputValid() {\n        if(this.state.projection.movie==null || this.state.projection.time==\"\"){\n            this.setState({isValid:false})\n            return\n        }\n        //proveravamo da li je bilo koje polje ostalo prazno\n        /*if (Object.entries(this.state.projection).some(\n            (key, value) => { return (value == null || value == \"\" || value == 0) })) {\n            this.setState({isValid:false})\n            return\n        }*/\n\n        const typeRegex = new RegExp('[234]D');\n        const timeRegex = new RegExp('[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]');\n        if(typeRegex.test(this.state.projection.type) &&\n            timeRegex.test(this.state.projection.time)){\n                this.setState({isValid:true})\n                return\n            }\n        this.setState({isValid:false})\n\n    }\n\n    async create(e) {\n        e.preventDefault();\n\n        try {\n\n            let projection = this.state.projection;\n            let projectionDTO = {\n                datumIVreme: projection.time,\n                film: projection.movie,\n                sala: projection.hall,\n                tip: projection.type,\n                cenaKarte: projection.price\n            }\n\n            let response = await CinemaAxios.post(\"/projekcije\", projectionDTO);\n            this.props.navigate(\"/projections\");\n        } catch (error) {\n            alert(\"Couldn't save the movie\");\n        }\n    }\n\n    valueInputChanged(e) {\n        let input = e.target;\n\n        let name = input.name;\n        let value = input.value;\n\n        let projection = this.state.projection;\n        projection[name] = value;\n\n        this.setState({ projection: projection });\n        this.isInputValid()\n    }\n\n    movieSelectionChanged(e) {\n\n        let movieId = e.target.value;\n        let movie = this.state.movies.find((movie) => movie.id == movieId);\n\n        let projection = this.state.projection;\n        projection.movie = movie;\n\n        this.setState({ projection: projection});\n        this.isInputValid()\n    }\n\n    render() {\n        return (\n            <>\n                <Row>\n                    <Col></Col>\n                    <Col xs=\"12\" sm=\"10\" md=\"8\">\n                        <h1>Add Projection</h1>\n\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>Time</Form.Label>\n                                <Form.Control pattern='(0[1-9]|[1-2][0-9]|3[0-1])-(0[1-9]|1[0-2])-[0-9]{4} (2[0-3]|[01][0-9]):[0-5][0-9]'\n                                    id=\"pTime\" name=\"time\" onChange={(e) => this.valueInputChanged(e)} /> <br />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Type</Form.Label>\n                                <Form.Control pattern=\"[23]D\" id=\"pType\" name=\"type\" onChange={(e) => this.valueInputChanged(e)} /> <br />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Hall</Form.Label>\n                                <Form.Control required type=\"number\" id=\"pHall\" name=\"hall\" onChange={(e) => this.valueInputChanged(e)} /> <br />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" step=\".01\" id=\"pPrice\" name=\"price\" onChange={(e) => this.valueInputChanged(e)} /> <br />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Movies</Form.Label>\n                                <Form.Select name=\"movie\" onChange={event => this.movieSelectionChanged(event)}>\n                                    <option></option>\n                                    {\n                                        this.state.movies.map((movie) => {\n                                            return (\n                                                <option key={movie.id} value={movie.id}>{movie.naziv}</option>\n                                            )\n                                        })\n                                    }\n                                </Form.Select><br />\n                            </Form.Group>\n\n                            <Button disabled={!this.state.isValid} onClick={(event) => { this.create(event); }}>Add</Button>\n                        </Form>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </>\n        )\n    }\n}\n\nexport default withNavigation(AddProjection);","import React from 'react';\n\nconst NotFound = () => <h1>404 - Page not found</h1>\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, HashRouter as Router, Routes, Navigate } from 'react-router-dom';\nimport { Navbar, Nav, Button, Container} from 'react-bootstrap';\nimport Home from './components/Home';\nimport Login from './components/authorization/Login'\nimport AddMovie from './components/movies/AddMovie';\nimport EditMovie from './components/movies/EditMovie';\nimport Movies from './components/movies/Movies';\nimport Projections from './components/projections/Projections';\nimport AddProjection from './components/projections/AddProjection';\nimport NotFound from './components/NotFound';\nimport {logout} from './services/auth';\n\nclass App extends React.Component {\n\n    render() {\n        const jwt = window.localStorage['jwt'];\n\n        if(jwt){\n            return (\n            <>\n                <Router>\n                    <Navbar expand bg=\"dark\" variant=\"dark\">\n                        <Navbar.Brand as={Link} to=\"/\">\n                            JWD\n                        </Navbar.Brand>\n                        <Nav>\n                        <Nav.Link as={Link} to=\"/movies\">\n                            Movies\n                        </Nav.Link>\n                        <Nav.Link as={Link} to=\"/projections\">\n                            Projections\n                        </Nav.Link>\n                        <Button onClick={()=>logout()}>Logout</Button>:\n                        </Nav>\n                    </Navbar>\n                    <Container style={{paddingTop:\"10px\"}}>\n                    <Routes>\n                        <Route path=\"/\" element={<Home/>} />\n                        <Route path=\"/login\" element={<Navigate replace to='/'/>} />\n                        <Route path=\"/movies\" element={<Movies/>} />\n                        <Route path=\"/movies/add\" element={<AddMovie/>} />\n                        <Route path=\"/movies/edit/:id\" element={<EditMovie/>} />\n                        <Route path=\"/projections\" element={<Projections/>} />\n                        <Route path=\"/projections/add\" element={<AddProjection/>} />\n                        <Route path=\"*\" element={<NotFound/>} />\n                    </Routes>\n                </Container>\n                </Router>\n            </>\n        );\n        }else{\n            return( \n            <>\n                <Router>\n                <Navbar expand bg=\"dark\" variant=\"dark\">\n                        <Navbar.Brand as={Link} to=\"/\">\n                            JWD\n                        </Navbar.Brand>\n                        <Nav>\n                        <Nav.Link as={Link} to=\"/movies\">\n                            Movies\n                        </Nav.Link>\n                        <Nav.Link as={Link} to=\"/login\">\n                            Login\n                        </Nav.Link>\n                        </Nav>\n                    </Navbar>\n                    <Container style={{paddingTop:\"10px\"}}>\n                    <Routes>\n                        <Route path=\"/\" element={<Home/>} />\n                        <Route path=\"/login\" element={<Login/>}/>\n                        <Route path=\"/movies\" element={<Movies/>} />\n                        <Route path=\"*\" element={<Navigate replace to = \"/login\"/>}/>\n                    </Routes>\n                    </Container>\n                </Router>\n            </>);\n        }\n    }\n};\n\n\nReactDOM.render(\n    <App/>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}